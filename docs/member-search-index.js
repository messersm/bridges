memberSearchIndex = [{"p":"bridges.game","c":"Board","l":"addBridge(Bridge)","url":"addBridge(bridges.game.Bridge)"},{"p":"bridges.model","c":"GameModel","l":"addBridge(Bridge)","url":"addBridge(bridges.game.Bridge)"},{"p":"bridges.game","c":"Board","l":"addIsland(Island)","url":"addIsland(bridges.game.Island)"},{"p":"bridges.game","c":"Board","l":"Board(int, int, List<Island>, List<Bridge>)","url":"%3Cinit%3E(int,int,java.util.List,java.util.List)"},{"p":"bridges.game","c":"Board","l":"Board(int, int)","url":"%3Cinit%3E(int,int)"},{"p":"bridges.gui","c":"BoardCanvas","l":"BoardCanvas(GameModel)","url":"%3Cinit%3E(bridges.model.GameModel)"},{"p":"bridges.util","c":"BoardGenerator","l":"BoardGenerator()","url":"%3Cinit%3E()"},{"p":"bridges.util","c":"BoardMerger","l":"BoardMerger()","url":"%3Cinit%3E()"},{"p":"bridges.util","c":"BoardReader","l":"BoardReader(Reader)","url":"%3Cinit%3E(java.io.Reader)"},{"p":"bridges.util","c":"BoardSolver","l":"BoardSolver()","url":"%3Cinit%3E()"},{"p":"bridges.util","c":"BoardWriter","l":"boardToString(Board)","url":"boardToString(bridges.game.Board)"},{"p":"bridges.util","c":"BoardWriter","l":"BoardWriter()","url":"%3Cinit%3E()"},{"p":"bridges.game","c":"Bridge","l":"Bridge(Island, Island, boolean)","url":"%3Cinit%3E(bridges.game.Island,bridges.game.Island,boolean)"},{"p":"bridges.game","c":"Board","l":"bridges()"},{"p":"bridges.game","c":"Board","l":"bridges(Island)","url":"bridges(bridges.game.Island)"},{"p":"bridges.gui","c":"BridgesApp","l":"BridgesApp()","url":"%3Cinit%3E()"},{"p":"bridges.game","c":"Board","l":"canAdd(Bridge)","url":"canAdd(bridges.game.Bridge)"},{"p":"bridges.game","c":"Island","l":"collidesWith(Island)","url":"collidesWith(bridges.game.Island)"},{"p":"bridges.game","c":"Bridge","l":"compareTo(Bridge)","url":"compareTo(bridges.game.Bridge)"},{"p":"bridges.game","c":"Island","l":"compareTo(Island)","url":"compareTo(bridges.game.Island)"},{"p":"bridges.game","c":"Board","l":"copy()"},{"p":"bridges.game","c":"Bridge","l":"count(List<Bridge>)","url":"count(java.util.List)"},{"p":"bridges.game","c":"Board","l":"createBridge(Island, Direction)","url":"createBridge(bridges.game.Island,bridges.game.Direction)"},{"p":"bridges.model","c":"GameModel","l":"createBridge(Island, Direction)","url":"createBridge(bridges.game.Island,bridges.game.Direction)"},{"p":"bridges.game","c":"Bridge","l":"crosses(Bridge)","url":"crosses(bridges.game.Bridge)"},{"p":"bridges.game","c":"Bridge","l":"crosses(List<Bridge>)","url":"crosses(java.util.List)"},{"p":"bridges.gui","c":"CustomDialog","l":"CustomDialog(Frame, boolean, String, double, double)","url":"%3Cinit%3E(java.awt.Frame,boolean,java.lang.String,double,double)"},{"p":"bridges.gui","c":"CustomDialog","l":"CustomDialog(Frame, boolean, String)","url":"%3Cinit%3E(java.awt.Frame,boolean,java.lang.String)"},{"p":"bridges.gui","c":"CustomDialog","l":"CustomDialog(Frame, boolean)","url":"%3Cinit%3E(java.awt.Frame,boolean)"},{"p":"bridges.gui","c":"CustomDialog","l":"CustomDialog(Frame)","url":"%3Cinit%3E(java.awt.Frame)"},{"p":"bridges.game","c":"Bridge","l":"cuts(Island)","url":"cuts(bridges.game.Island)"},{"p":"bridges.util","c":"BoardGenerator","l":"DEFAULT_TRIES"},{"p":"bridges.gui","c":"BoardCanvas","l":"displayMissing(boolean)"},{"p":"bridges.game","c":"Direction","l":"dx"},{"p":"bridges.game","c":"Direction","l":"dy"},{"p":"bridges.game","c":"Direction","l":"EAST"},{"p":"bridges.game","c":"Bridge","l":"equals(Bridge)","url":"equals(bridges.game.Bridge)"},{"p":"bridges.game","c":"Island","l":"equals(Island)","url":"equals(bridges.game.Island)"},{"p":"bridges.game","c":"Bridge","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"bridges.game","c":"Island","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"bridges.model","c":"GameModel","l":"GameModel()","url":"%3Cinit%3E()"},{"p":"bridges.util","c":"BoardGenerator","l":"generate()"},{"p":"bridges.util","c":"BoardGenerator","l":"generate(int, int, int, int)","url":"generate(int,int,int,int)"},{"p":"bridges.model","c":"GameModel","l":"generate(int, int, int)","url":"generate(int,int,int)"},{"p":"bridges.util","c":"BoardGenerator","l":"generate(int, int, int)","url":"generate(int,int,int)"},{"p":"bridges.util","c":"BoardGenerator","l":"generate(int, int)","url":"generate(int,int)"},{"p":"bridges.model","c":"GameModel","l":"getBridges()"},{"p":"bridges.model","c":"GameModel","l":"getBridges(Island, Direction)","url":"getBridges(bridges.game.Island,bridges.game.Direction)"},{"p":"bridges.model","c":"GameModel","l":"getBridges(Island)","url":"getBridges(bridges.game.Island)"},{"p":"bridges.gui","c":"NewPuzzleDialog","l":"getError()"},{"p":"bridges.game","c":"Bridge","l":"getFirstIsland()"},{"p":"bridges.game","c":"Board","l":"getHeight()"},{"p":"bridges.model","c":"GameModel","l":"getHeight()"},{"p":"bridges.game","c":"Board","l":"getIncomplete()"},{"p":"bridges.game","c":"Board","l":"getIslandAt(int, int)","url":"getIslandAt(int,int)"},{"p":"bridges.model","c":"GameModel","l":"getIslandAt(int, int)","url":"getIslandAt(int,int)"},{"p":"bridges.game","c":"Board","l":"getIslandCount()"},{"p":"bridges.game","c":"Board","l":"getIslands()"},{"p":"bridges.model","c":"GameModel","l":"getIslands()"},{"p":"bridges.game","c":"Island","l":"getRequiredBridges()"},{"p":"bridges.game","c":"Bridge","l":"getSecondIsland()"},{"p":"bridges.model","c":"GameModel","l":"getState()"},{"p":"bridges.game","c":"Board","l":"getWidth()"},{"p":"bridges.model","c":"GameModel","l":"getWidth()"},{"p":"bridges.game","c":"Island","l":"getX()"},{"p":"bridges.game","c":"Island","l":"getY()"},{"p":"bridges.model","c":"GameModel","l":"hasBoard()"},{"p":"bridges.game","c":"Bridge","l":"hashCode()"},{"p":"bridges.game","c":"Island","l":"hashCode()"},{"p":"bridges.game","c":"Bridge","l":"hasIsland(Island)","url":"hasIsland(bridges.game.Island)"},{"p":"bridges.util","c":"BoardSolver","l":"hasStep(Board)","url":"hasStep(bridges.game.Board)"},{"p":"bridges.game","c":"BoardState","l":"INCORRECT"},{"p":"bridges.game","c":"Board","l":"isComplete()"},{"p":"bridges.game","c":"Bridge","l":"isCovered(List<Bridge>)","url":"isCovered(java.util.List)"},{"p":"bridges.game","c":"Island","l":"isCutBy(List<Bridge>)","url":"isCutBy(java.util.List)"},{"p":"bridges.game","c":"Bridge","l":"isDouble()"},{"p":"bridges.game","c":"Board","l":"isFullyConnected()"},{"p":"bridges.game","c":"Island","l":"Island(int, int, int)","url":"%3Cinit%3E(int,int,int)"},{"p":"bridges.model","c":"GameModel","l":"isValid(Bridge)","url":"isValid(bridges.game.Bridge)"},{"p":"bridges.model","c":"GameModel","l":"load(String)","url":"load(java.lang.String)"},{"p":"bridges.gui","c":"BridgesApp","l":"loadMultiple()"},{"p":"bridges.gui","c":"Main","l":"Main()","url":"%3Cinit%3E()"},{"p":"bridges.gui","c":"Main","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"bridges.util","c":"BoardGenerator","l":"MAX_HEIGHT"},{"p":"bridges.util","c":"BoardGenerator","l":"MAX_WIDTH"},{"p":"bridges.util","c":"BoardGenerator","l":"maxIslandCount(int, int)","url":"maxIslandCount(int,int)"},{"p":"bridges.util","c":"BoardMerger","l":"merge(Board, Board, Boolean)","url":"merge(bridges.game.Board,bridges.game.Board,java.lang.Boolean)"},{"p":"bridges.model","c":"GameModel","l":"merge(String, String)","url":"merge(java.lang.String,java.lang.String)"},{"p":"bridges.gui","c":"MessageDialog","l":"MessageDialog(Frame, String, String)","url":"%3Cinit%3E(java.awt.Frame,java.lang.String,java.lang.String)"},{"p":"bridges.util","c":"BoardGenerator","l":"MIN_HEIGHT"},{"p":"bridges.util","c":"BoardGenerator","l":"MIN_ISLAND_COUNT"},{"p":"bridges.util","c":"BoardGenerator","l":"MIN_WIDTH"},{"p":"bridges.game","c":"Direction","l":"nearest(int, int)","url":"nearest(int,int)"},{"p":"bridges.game","c":"Board","l":"neighbor(Island, Direction)","url":"neighbor(bridges.game.Island,bridges.game.Direction)"},{"p":"bridges.game","c":"Board","l":"neighbors(Island)","url":"neighbors(bridges.game.Island)"},{"p":"bridges.gui","c":"NewPuzzleDialog","l":"NewPuzzleDialog(Frame, GameModel)","url":"%3Cinit%3E(java.awt.Frame,bridges.model.GameModel)"},{"p":"bridges.util","c":"BoardSolver","l":"nextBridge(Board)","url":"nextBridge(bridges.game.Board)"},{"p":"bridges.model","c":"GameModel","l":"nextStep()"},{"p":"bridges.game","c":"BoardState","l":"NOBOARD"},{"p":"bridges.game","c":"Direction","l":"NORTH"},{"p":"bridges.gui","c":"BoardCanvas","l":"paint(Graphics)","url":"paint(java.awt.Graphics)"},{"p":"bridges.game","c":"Board","l":"partition()"},{"p":"bridges.util","c":"BoardGenerator","l":"randomHeight()"},{"p":"bridges.util","c":"BoardGenerator","l":"randomIslandCount(int, int)","url":"randomIslandCount(int,int)"},{"p":"bridges.util","c":"BoardGenerator","l":"randomWidth()"},{"p":"bridges.util","c":"BoardReader","l":"read()"},{"p":"bridges.game","c":"Board","l":"removeOneBridge(Bridge)","url":"removeOneBridge(bridges.game.Bridge)"},{"p":"bridges.model","c":"GameModel","l":"removeOneBridge(Bridge)","url":"removeOneBridge(bridges.game.Bridge)"},{"p":"bridges.game","c":"Board","l":"reset()"},{"p":"bridges.model","c":"GameModel","l":"restart()"},{"p":"bridges.model","c":"GameModel","l":"save(String)","url":"save(java.lang.String)"},{"p":"bridges.game","c":"Board","l":"searchBridge(Island, Direction)","url":"searchBridge(bridges.game.Island,bridges.game.Direction)"},{"p":"bridges.game","c":"Board","l":"searchBridge(Island, Island)","url":"searchBridge(bridges.game.Island,bridges.game.Island)"},{"p":"bridges.util","c":"BoardReader.SemanticException","l":"SemanticException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"bridges.util","c":"BoardSolver","l":"solve(Board)","url":"solve(bridges.game.Board)"},{"p":"bridges.game","c":"BoardState","l":"SOLVED"},{"p":"bridges.game","c":"Direction","l":"SOUTH"},{"p":"bridges.gui","c":"StatusLabel","l":"StatusLabel(GameModel)","url":"%3Cinit%3E(bridges.model.GameModel)"},{"p":"bridges.util","c":"BoardSolver","l":"step(Board)","url":"step(bridges.game.Board)"},{"p":"bridges.util","c":"BoardReader.SyntaxException","l":"SyntaxException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"bridges.game","c":"Bridge","l":"toString()"},{"p":"bridges.game","c":"Island","l":"toString()"},{"p":"bridges.game","c":"BoardState","l":"UNSOLVABLE"},{"p":"bridges.game","c":"BoardState","l":"UNSOLVED"},{"p":"bridges.gui","c":"BoardCanvas","l":"update(Observable, Object)","url":"update(java.util.Observable,java.lang.Object)"},{"p":"bridges.gui","c":"BridgesApp","l":"update(Observable, Object)","url":"update(java.util.Observable,java.lang.Object)"},{"p":"bridges.gui","c":"StatusLabel","l":"update(Observable, Object)","url":"update(java.util.Observable,java.lang.Object)"},{"p":"bridges.game","c":"Board","l":"validNeighbors(Island)","url":"validNeighbors(bridges.game.Island)"},{"p":"bridges.game","c":"BoardState","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"bridges.game","c":"Direction","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"bridges.game","c":"BoardState","l":"values()"},{"p":"bridges.game","c":"Direction","l":"values()"},{"p":"bridges.game","c":"Direction","l":"WEST"}]